name: Build-Lean-lede
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/Build-Lean-lede.yml'
  schedule:
        - cron: 0 */8 * * *
  workflow_dispatch:

env:
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: false

jobs:

  Raspberry3:
    runs-on: ubuntu-latest
    steps:
    - name: Prepare environment.
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
        bash <(curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/prenv.sh)
        
    - name: Clone source and install
      run: |
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Download and Load custom configuration
      run: |
        cd lede
        curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/rpi/.config >.config
        bash <(curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/diy.sh)
        make defconfig
        
    - name: Download package
      run: |
        cd lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        which opl2ofm || { pushd package/custom/openwrt-packages/luci-app-openclash/tools/po2lmo ; make install ; popd ; } 
        
    - name: Multi-core compile
      run: |
        cd lede
        echo -e "$(nproc) thread compile"
        sudo df -h
        make -j$(nproc)
        sudo df -h
        
    - name: Single-core compile
      if: failure()
      run: |
        sudo df -h
        cd lede
        make -j1 V=s
        sudo df -h
        
    - name: Upload entire bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: LEDE-RaspberryPi-bin-dictionary
        path: lede/bin

    - name: Upload firmware to cowtransfer
      if: success() && env.UPLOAD_COWTRANSFER == 'true'
      run: |
        cd lede/bin/targets/*/*
        zip -r -o -q LEDE-RaspberryPi-bin-dictionary.zip . -i *
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress LEDE-RaspberryPi-bin-dictionary.zip 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        rm LEDE-RaspberryPi-bin-dictionary.zip

    # - name: Only Upload Packages to Main Download Station
    #   if: success()
    #   run: |
    #     cd lede/bin
    #     zip -r rpi3-Package.zip . -i *.ipk
    #     curl -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi3/Lean-Package" -F "file=@rpi3-Package.zip" ${{ secrets.MAIN_UPLOAD_PROCESSOR }}
    #     curl --socks5 ${{ secrets.PROXY_ADDR }} -U ${{ secrets.PROXY_USER }} -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi3/Lean-Package" -F "file=@rpi3-Package.zip" ${{ secrets.CN_STATION_PROCESSOR }}
        
    - name: Setup Upload dictionary
      if: always()
      run: |
        cd lede/bin
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
        
    - name: Only Upload firmware (Without packages)
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: RaspberryPi3b
        path: ${{ env.FIRMWARE }}
        
    # - name: Upload firmware to Main Download Station (Without packages)
    #   if: success()
    #   run: |
    #     cd lede/bin/targets/*/*
    #     zip -r -o -q rpi3.zip . -i *.gz
    #     curl -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi3/Lean" -F "file=@rpi3.zip" ${{ secrets.MAIN_UPLOAD_PROCESSOR }}
    #     curl --socks5 ${{ secrets.PROXY_ADDR }} -U ${{ secrets.PROXY_USER }} -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi3/Lean" -F "file=@rpi3.zip" ${{ secrets.CN_STATION_PROCESSOR }}

  # Raspberry32bit:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Prepare environment.
  #     env:
  #         DEBIAN_FRONTEND: noninteractive
  #     run: |
  #       bash <(curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/prenv.sh)
        
  #   - name: Clone source and install
  #     run: |
  #       git clone https://github.com/coolsnowwolf/lede
  #       cd lede
  #       ./scripts/feeds update -a
  #       ./scripts/feeds install -a
        
  #   - name: Download and Load custom configuration
  #     run: |
  #       cd lede
  #       curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/rpi32/.config >.config
  #       bash <(curl -fsSL https://raw.githubusercontent.com/gzmud/My-action/master/lean-lede/diy.sh)
  #       ./scripts/feeds install -a
  #       make defconfig
        
  #   - name: Download package
  #     run: |
  #       cd lede
  #       make download -j8
  #       find dl -size -1024c -exec ls -l {} \;
  #       find dl -size -1024c -exec rm -f {} \;
  #       which opl2ofm ||  { pushd package/custom/openwrt-packages/luci-app-openclash/tools/po2lmo ; make install ; popd ; } 

  #   - name: Multi-core compile
  #     run: |
  #       cd lede
  #       echo -e "$(nproc) thread compile"
  #       sudo df -h
  #       make -j$(nproc)
  #       sudo df -h
        
  #   - name: Single-core compile
  #     if: failure()
  #     run: |
  #       sudo df -h
  #       cd lede
  #       make -j1 V=s
  #       sudo df -h
        
  #   - name: Upload entire bin directory
  #     uses: actions/upload-artifact@master
  #     if: always()
  #     with:
  #       name: LEDE-RaspberryPi-32bit-bin-dictionary
  #       path: lede/bin
        
  #   - name: Only Upload Packages to Main Download Station
  #     if: success()
  #     run: |
  #       cd lede/bin
  #       zip -r rpi-32bit-Package.zip . -i *.ipk
  #       curl -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi-32bit/Lean-Package" -F "file=@rpi-32bit-Package.zip" ${{ secrets.MAIN_UPLOAD_PROCESSOR }}
  #       curl --socks5 ${{ secrets.PROXY_ADDR }} -U ${{ secrets.PROXY_USER }} -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi-32bit/Lean-Package" -F "file=@rpi-32bit-Package.zip" ${{ secrets.CN_STATION_PROCESSOR }}
        
  #   - name: Setup Upload dictionary
  #     if: always()
  #     run: |
  #       cd lede/bin
  #       rm -rf packages
  #       echo "::set-env name=FIRMWARE::$(pwd)"
        
  #   - name: Only Upload firmware (Without packages)
  #     uses: actions/upload-artifact@master
  #     if: always()
  #     with:
  #       name: RaspberryPi-32bit
  #       path: ${{ env.FIRMWARE }}
        
  #   - name: Upload firmware to Main Download Station (Without packages)
  #     if: success()
  #     run: |
  #       cd lede/bin/targets/*/*
  #       zip -r -o -q rpi-32bit.zip . -i *.gz
  #       curl -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi-32bit/Lean" -F "file=@rpi-32bit.zip" ${{ secrets.MAIN_UPLOAD_PROCESSOR }}
  #       curl --socks5 ${{ secrets.PROXY_ADDR }} -U ${{ secrets.PROXY_USER }} -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/RaspberryPi-32bit/Lean" -F "file=@rpi-32bit.zip" ${{ secrets.CN_STATION_PROCESSOR }}
